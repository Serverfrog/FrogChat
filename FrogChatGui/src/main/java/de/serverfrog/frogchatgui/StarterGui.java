package de.serverfrog.frogchatgui;

import java.awt.EventQueue;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.net.URL;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;

import javax.swing.AbstractListModel;
import javax.swing.ImageIcon;
import javax.swing.SwingWorker;

import org.apache.commons.lang3.StringUtils;

import de.serverfrog.frogchat.entities.Chat;
import de.serverfrog.frogchat.entities.Message;
import de.serverfrog.frogchat.entities.User;
import de.serverfrog.frogchat.entities.UserList;

/**
 *
 * @author m-p-h_000
 */
public class StarterGui extends javax.swing.JFrame {

    class RequesterThread extends SwingWorker<Object, Object> {

        @Override
        @SuppressWarnings("SleepWhileInLoop")
        protected Object doInBackground() throws Exception {
            while (true) {

                try {
                    Chat chat = handler.getChat();
                    appendToChat(chat);
                    listModel.setUsers(handler.getOnlineUser());
                } catch (Exception e) {
                    System.out.println("Exception:" + e.toString());
                }

                Thread.sleep(500);
            }

        }
    }

    class UserListModel extends AbstractListModel<String> {

        private List<User> users = new ArrayList<>();

        public static final String PROP_USERS = "users";

        @Override
        public int getSize() {
            return users.size();
        }

        @Override
        public String getElementAt(int index) {
            return users.get(index).getUsername();
        }

        /**
         * Get the value of users
         *
         * @return the value of users
         */
        public List<User> getUsers() {
            return users;
        }

        /**
         * Set the value of users
         *
         * @param users new value of users
         */
        public void setUsers(UserList users) {
            fireContentsChanged(users, 0, users.getUsers().size());
            this.users = users.getUsers();
        }

    }

    private WebHandler handler;

    private Chat chat;

    private final DateFormat df = new SimpleDateFormat("HH:mm:ss");

    private final UserListModel listModel = new UserListModel();

    /**
     * Creates new form StarterGui
     */
    public StarterGui() {
        initComponents();
        URL imgURL = getClass().getResource("icon.png");
        ImageIcon myAppImage = new ImageIcon(imgURL);
        setIconImage(myAppImage.getImage());
        userList.setModel(listModel);
        EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                LoginCask cask = new LoginCask(StarterGui.this, true);
                cask.setVisible(true);
                User user = cask.getUser();
                String server = cask.getServer();
                handler = WebHandler.getInstance(server, user, cask.getKeyRing(), cask.getServerPublicKey(), cask.getPassword(), cask.getPrivatKey());
                RequesterThread requesterThread = new RequesterThread();
                requesterThread.execute();

            }
        });
        addWindowListener(new WindowAdapter() {

            @Override
            public void windowClosing(WindowEvent e) {
                handler.logout();
                super.windowClosing(e); //To change body of generated methods, choose Tools | Templates.
                Runtime.getRuntime().exit(0);
            }

        });
    }

    private void appendToChat(Chat gettedChat) {
        if ( gettedChat == null || gettedChat.getMessages() == null ) return;
        if ( chat == null ) chat = gettedChat;
        for (Message message : gettedChat.getMessages()) {
            if ( !chat.getMessages().contains(message) ) chat.getMessages().add(message);
        }
        StringBuilder builder = new StringBuilder();
        for (Message message : gettedChat.getMessages()) {
            builder.append('(')
                    .append(df.format(message.getOccurence()))
                    .append(')')
                    .append(message.getUser().getUsername())
                    .append(": ")
                    .append(message.getMessage())
                    .append('\n');
        }
        chatPane.setText(chatPane.getText() + builder.toString());
        chatPane.setCaretPosition(chatPane.getText().length());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel3 = new javax.swing.JPanel();
        jSplitPane2 = new javax.swing.JSplitPane();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        chatPane = new javax.swing.JEditorPane();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        userList = new javax.swing.JList<String>();
        jPanel4 = new javax.swing.JPanel();
        sendButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        messagePane = new javax.swing.JEditorPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("FrogChat");
        setPreferredSize(new java.awt.Dimension(800, 600));

        jSplitPane1.setDividerLocation(400);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jSplitPane2.setDividerLocation(600);

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        chatPane.setEditable(false);
        jScrollPane2.setViewportView(chatPane);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 599, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE)
        );

        jSplitPane2.setLeftComponent(jPanel5);

        userList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(userList);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE)
        );

        jSplitPane2.setRightComponent(jPanel6);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane2)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane2)
        );

        jSplitPane1.setTopComponent(jPanel3);

        sendButton.setText("Senden");
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane3.setToolTipText("");
        jScrollPane3.setViewportView(messagePane);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 706, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sendButton))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(143, Short.MAX_VALUE)
                .addComponent(sendButton))
            .addComponent(jScrollPane3)
        );

        jSplitPane1.setRightComponent(jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed
        if ( StringUtils.isBlank(messagePane.getText()) ) return;
        handler.sendMessage(messagePane.getText());
        messagePane.setText("");
    }//GEN-LAST:event_sendButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ( "Nimbus".equals(info.getName()) ) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StarterGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new StarterGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JEditorPane chatPane;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JEditorPane messagePane;
    private javax.swing.JButton sendButton;
    private javax.swing.JList<String> userList;
    // End of variables declaration//GEN-END:variables
}
